{
    gStyle->SetOptStat(0);
    TFile *tf1=  TFile::Open("Jun15/C.root");
    TBox *b1= new TBox();

    int verbose=1;
    int plotA=1;
    int plotB=1;

    //=================
    //Definitions
    //=================

    TString coin = "(TDC_AT_BGO>300 && TDC_AT_BGO<400)";
    TString E_A = "0.14*sqrt((ADC_AT_A_T-65)*(ADC_AT_A_B-77))";
    TString E_B = "0.15*sqrt((ADC_AT_B_T-64)*(ADC_AT_B_B-62))";

    TString E_ST = "(3.8199*(ADC_BGO_S_T-78))";
    TString E_SB = "(3.4566*(ADC_BGO_S_B-67))";
    TString E_M = "(3.27217*(ADC_BGO_M-50))";
    TString E_LF = "(4.32*(ADC_BGO_L_F-60))";
    TString E_LB = "(3.78307*(ADC_BGO_L_B-59))";

    TString nA = "&& (TDC_AT_A>300 && TDC_AT_A<400) && (ADC_AT_A_T>100 && ADC_AT_A_B>100 && abs(ADC_AT_A_T-ADC_AT_A_B)<350) && ADC_AT_A_T<1900 && ADC_AT_A_B<1900";
    TString nB = "&& (TDC_AT_B>300 && TDC_AT_B<400) &&(ADC_AT_B_T>100 && ADC_AT_B_B>100 && abs(ADC_AT_B_T-ADC_AT_B_B)<350) && ADC_AT_B_T<1900 && ADC_AT_B_B<1900";

    TString nAcST= nA + "&& (TDC_Beam0>503 && TDC_Beam0<563) && (TDC_BGO_S_T>785 && TDC_BGO_S_T<825)";
    TString nAcSB= nA + "&& (TDC_Beam0>521 && TDC_Beam0<549) && (TDC_BGO_S_B>767 && TDC_BGO_S_B<789)";
    TString nAcM= nA + "&& (TDC_Beam0>518 && TDC_Beam0<551) && (TDC_BGO_M>763 && TDC_BGO_M<808)";
    TString nAcLF= nA + "&& (TDC_Beam0>513 && TDC_Beam0<554) && (TDC_BGO_L_F>803 && TDC_BGO_L_F<830)";
    TString nAcLB= nA + "&& (TDC_Beam0>513 && TDC_Beam0<554) && (TDC_BGO_L_B>795 && TDC_BGO_L_B<817)";

    TString nBcST= nB + "&& (TDC_Beam0>472 && TDC_Beam0<519) && (TDC_BGO_S_T>765 && TDC_BGO_S_T<812)";
    TString nBcSB= nB + "&& (TDC_Beam0>475 && TDC_Beam0<513) && (TDC_BGO_S_B>737 && TDC_BGO_S_B<777)";
    TString nBcM= nB + "&& (TDC_Beam0>472 && TDC_Beam0<523) && (TDC_BGO_M>737 && TDC_BGO_M<787)";
    TString nBcLF= nB + "&& (TDC_Beam0>469 && TDC_Beam0<523) && (TDC_BGO_L_F>778 && TDC_BGO_L_F<815)";
    TString nBcLB= nB + "&& (TDC_Beam0>472 && TDC_Beam0<529) && (TDC_BGO_L_B>771 && TDC_BGO_L_B<805)";

    TString comAcST= nA + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_S_T>785 && TDC_BGO_S_T<825)";
    TString comAcSB= nA + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_S_B>767 && TDC_BGO_S_B<789)";
    TString comAcM= nA + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_M>763 && TDC_BGO_M<808)";
    TString comAcLF= nA + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_L_F>803 && TDC_BGO_L_F<830)";
    TString comAcLB= nA + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_L_B>795 && TDC_BGO_L_B<817)";

    TString comBcST= nB + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_S_T>765 && TDC_BGO_S_T<812)";
    TString comBcSB= nB + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_S_B>737 && TDC_BGO_S_B<777)";
    TString comBcM= nB + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_M>737 && TDC_BGO_M<787)";
    TString comBcLF= nB + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_L_F>778 && TDC_BGO_L_F<815)";
    TString comBcLB= nB + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_L_B>771 && TDC_BGO_L_B<805)";

    TString accAcST= nA + "&& (TDC_Beam0>503 && TDC_Beam0<563) && (TDC_BGO_S_T>950 && TDC_BGO_S_T<1150)";
    TString accAcSB= nA + "&& (TDC_Beam0>521 && TDC_Beam0<549) && (TDC_BGO_S_B>950 && TDC_BGO_S_B<1150)";
    TString accAcM= nA + "&& (TDC_Beam0>518 && TDC_Beam0<551) && (TDC_BGO_M>950 && TDC_BGO_M<1150)";
    TString accAcLF= nA + "&& (TDC_Beam0>513 && TDC_Beam0<554) && (TDC_BGO_L_F>950 && TDC_BGO_L_F<1150)";
    TString accAcLB= nA + "&& (TDC_Beam0>513 && TDC_Beam0<554) && (TDC_BGO_L_B>950 && TDC_BGO_L_B<1150)";

    TString accBcST= nB + "&& (TDC_Beam0>472 && TDC_Beam0<519) && (TDC_BGO_S_T>950 && TDC_BGO_S_T<1150)";
    TString accBcSB= nB + "&& (TDC_Beam0>475 && TDC_Beam0<513) && (TDC_BGO_S_B>950 && TDC_BGO_S_B<1150)";
    TString accBcM= nB + "&& (TDC_Beam0>472 && TDC_Beam0<523) && (TDC_BGO_M>950 && TDC_BGO_M<1150)";
    TString accBcLF= nB + "&& (TDC_Beam0>469 && TDC_Beam0<523) && (TDC_BGO_L_F>950 && TDC_BGO_L_F<1150)";
    TString accBcLB= nB + "&& (TDC_Beam0>472 && TDC_Beam0<529) && (TDC_BGO_L_B>950 && TDC_BGO_L_B<1150)";

    TString caccAcST= nA + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_S_T>950 && TDC_BGO_S_T<1150)";
    TString caccAcSB= nA + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_S_B>950 && TDC_BGO_S_B<1150)";
    TString caccAcM= nA + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_M>950 && TDC_BGO_M<1150)";
    TString caccAcLF= nA + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_L_F>950 && TDC_BGO_L_F<1150)";
    TString caccAcLB= nA + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_L_B>950 && TDC_BGO_L_B<1150)";

    TString caccBcST= nB + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_S_T>950 && TDC_BGO_S_T<1150)";
    TString caccBcSB= nB + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_S_B>950 && TDC_BGO_S_B<1150)";
    TString caccBcM= nB + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_M>950 && TDC_BGO_M<1150)";
    TString caccBcLF= nB + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_L_F>950 && TDC_BGO_L_F<1150)";
    TString caccBcLB= nB + "&& (TDC_Beam0>600 && TDC_Beam0<800) && (TDC_BGO_L_B>950 && TDC_BGO_L_B<1150)";

if(plotA){
    //=================
    //AT A coincidences
    //=================

    if(verbose) cout<< "Plotting AT_A:BGO histograms..."<< endl;

    npdg->Draw(E_A+":"+E_ST+">>hAcST(10,2000,4000,10,0,300)",coin+nAcST);
    npdg->Draw(E_A+":"+E_ST+">>hcomAcST(10,2000,4000,10,0,300)",coin+comAcST);
    hcomAcST->Scale((double)60/200);
    npdg->Draw(E_A+":"+E_ST+">>haccAcST(10,2000,4000,10,0,300)",coin+accAcST);
    haccAcST->Scale((double)40/200);
    npdg->Draw(E_A+":"+E_ST+">>hcaccAcST(10,2000,4000,10,0,300)",coin+caccAcST);
    hcaccAcST->Scale((double)60*40/(200*200));

    npdg->Draw(E_A+":"+E_SB+">>hAcSB(10,2000,4000,10,0,300)",coin+nAcSB);
    npdg->Draw(E_A+":"+E_SB+">>hcomAcSB(10,2000,4000,10,0,300)",coin+comAcSB);
    hcomAcSB->Scale((double)28/200);
    npdg->Draw(E_A+":"+E_SB+">>haccAcSB(10,2000,4000,10,0,300)",coin+accAcSB);
    haccAcSB->Scale((double)22/200);
    npdg->Draw(E_A+":"+E_SB+">>hcaccAcSB(10,2000,4000,10,0,300)",coin+caccAcSB);
    hcaccAcSB->Scale((double)28*22/(200*200));

    npdg->Draw(E_A+":"+E_M+">>hAcM(10,2000,4000,10,0,300)",coin+nAcM);
    npdg->Draw(E_A+":"+E_M+">>hcomAcM(10,2000,4000,10,0,300)",coin+comAcM);
    hcomAcM->Scale((double)33/200);
    npdg->Draw(E_A+":"+E_M+">>haccAcM(10,2000,4000,10,0,300)",coin+accAcM);
    haccAcM->Scale((double)45/200);
    npdg->Draw(E_A+":"+E_M+">>hcaccAcM(10,2000,4000,10,0,300)",coin+caccAcM);
    hcaccAcM->Scale((double)33*45/(200*200));

    npdg->Draw(E_A+":"+E_LF+">>hAcLF(10,2000,4000,10,0,300)",coin+nAcLF);
    npdg->Draw(E_A+":"+E_LF+">>hcomAcLF(10,2000,4000,10,0,300)",coin+comAcLF);
    hcomAcLF->Scale((double)41/200);
    npdg->Draw(E_A+":"+E_LF+">>haccAcLF(10,2000,4000,10,0,300)",coin+accAcLF);
    haccAcLF->Scale((double)27/200);
    npdg->Draw(E_A+":"+E_LF+">>hcaccAcLF(10,2000,4000,10,0,300)",coin+caccAcLF);
    hcaccAcLF->Scale((double)41*27/(200*200));

    npdg->Draw(E_A+":"+E_LB+">>hAcLB(10,2000,4000,10,0,300)",coin+nAcLB);
    npdg->Draw(E_A+":"+E_LB+">>hcomAcLB(10,2000,4000,10,0,300)",coin+comAcLB);
    hcomAcLB->Scale((double)41/200);
    npdg->Draw(E_A+":"+E_LB+">>haccAcLB(10,2000,4000,10,0,300)",coin+accAcLB);
    haccAcLB->Scale((double)22/200);
    npdg->Draw(E_A+":"+E_LB+">>hcaccAcLB(10,2000,4000,10,0,300)",coin+caccAcLB);
    hcaccAcLB->Scale((double)41*22/(200*200));


    TH2F* hAcoin = (TH2F*) hAcST->Clone("hAcoin");
    TH2F* hAcomp = (TH2F*) hcomAcST->Clone("hAcomp");
    TH2F* hAacc = (TH2F*) haccAcST->Clone("hAacc");
    TH2F* hAcacc = (TH2F*) hcaccAcST->Clone("hAcacc");

    //hAcoin->Add(hcomAcST,-1);
    //hAcoin->Add(haccAcST,-1);
    //hAcoin->Add(hcaccAcST,1);

    hAcoin->Add(hAcSB);
    //hAcoin->Add(hcomAcSB,-1);
    //hAcoin->Add(haccAcSB,-1);
    //hAcoin->Add(hcaccAcSB,1);
    hAcomp->Add(hcomAcSB);
    hAacc->Add(haccAcSB);
    hAcacc->Add(hcaccAcSB);

    hAcoin->Add(hAcM);
    //hAcoin->Add(hcomAcM,-1);
    //hAcoin->Add(haccAcM,-1);
    //hAcoin->Add(hcaccAcM,1);
    hAcomp->Add(hcomAcM);
    hAacc->Add(haccAcM);
    hAcacc->Add(hcaccAcM);

    hAcoin->Add(hAcLF);
    //hAcoin->Add(hcomAcLF,-1);
    //hAcoin->Add(haccAcLF,-1);
    //hAcoin->Add(hcaccAcLF,1);
    hAcomp->Add(hcomAcLF);
    hAacc->Add(haccAcLF);
    hAcacc->Add(hcaccAcLF);

    hAcoin->Add(hAcLB);
    //hAcoin->Add(hcomAcLB,-1);
    //hAcoin->Add(haccAcLB,-1);
    //hAcoin->Add(hcaccAcLB,1);
    hAcomp->Add(hcomAcLB);
    hAacc->Add(haccAcLB);
    hAcacc->Add(hcaccAcLB);

}
if(plotB){
    //=================
    //AT B coincidences
    //=================

    if(verbose) cout<< "Plotting AT_B:BGO histograms..."<< endl;

    npdg->Draw(E_B+":"+E_ST+">>hBcST(10,2000,4000,10,0,300)",coin+nBcST);
    npdg->Draw(E_B+":"+E_ST+">>hcomBcST(10,2000,4000,10,0,300)",coin+comBcST);
    hcomBcST->Scale((double)47/200);
    npdg->Draw(E_B+":"+E_ST+">>haccBcST(10,2000,4000,10,0,300)",coin+accBcST);
    haccBcST->Scale((double)47/200);
    npdg->Draw(E_B+":"+E_ST+">>hcaccBcST(10,2000,4000,10,0,300)",coin+caccBcST);
    hcaccBcST->Scale((double)47*47/(200*200));

    npdg->Draw(E_B+":"+E_SB+">>hBcSB(10,2000,4000,10,0,300)",coin+nBcSB);
    npdg->Draw(E_B+":"+E_SB+">>hcomBcSB(10,2000,4000,10,0,300)",coin+comBcSB);
    hcomBcSB->Scale((double)38/200);
    npdg->Draw(E_B+":"+E_SB+">>haccBcSB(10,2000,4000,10,0,300)",coin+accBcSB);
    haccBcSB->Scale((double)40/200);
    npdg->Draw(E_B+":"+E_SB+">>hcaccBcSB(10,2000,4000,10,0,300)",coin+caccBcSB);
    hcaccBcSB->Scale((double)38*40/(200*200));

    npdg->Draw(E_B+":"+E_M+">>hBcM(10,2000,4000,10,0,300)",coin+nBcM);
    npdg->Draw(E_B+":"+E_M+">>hcomBcM(10,2000,4000,10,0,300)",coin+comBcM);
    hcomBcM->Scale((double)51/200);
    npdg->Draw(E_B+":"+E_M+">>haccBcM(10,2000,4000,10,0,300)",coin+accBcM);
    haccBcM->Scale((double)50/200);
    npdg->Draw(E_B+":"+E_M+">>hcaccBcM(10,2000,4000,10,0,300)",coin+caccBcM);
    hcaccBcM->Scale((double)51*50/(200*200));

    npdg->Draw(E_B+":"+E_LF+">>hBcLF(10,2000,4000,10,0,300)",coin+nBcLF);
    npdg->Draw(E_B+":"+E_LF+">>hcomBcLF(10,2000,4000,10,0,300)",coin+comBcLF);
    hcomBcLF->Scale((double)54/200);
    npdg->Draw(E_B+":"+E_LF+">>haccBcLF(10,2000,4000,10,0,300)",coin+accBcLF);
    haccBcLF->Scale((double)37/200);
    npdg->Draw(E_B+":"+E_LF+">>hcaccBcLF(10,2000,4000,10,0,300)",coin+caccBcLF);
    hcaccBcLF->Scale((double)37*54/(200*200));

    npdg->Draw(E_B+":"+E_LB+">>hBcLB(10,2000,4000,10,0,300)",coin+nBcLB);
    npdg->Draw(E_B+":"+E_LB+">>hcomBcLB(10,2000,4000,10,0,300)",coin+comBcLB);
    hcomBcLB->Scale((double)57/200);
    npdg->Draw(E_B+":"+E_LB+">>haccBcLB(10,2000,4000,10,0,300)",coin+accBcLB);
    haccBcLB->Scale((double)34/200);
    npdg->Draw(E_B+":"+E_LB+">>hcaccBcLB(10,2000,4000,10,0,300)",coin+caccBcLB);
    hcaccBcLB->Scale((double)57*34/(200*200));


    TH2F* hBcoin = (TH2F*) hBcST->Clone("hBcoin");
    TH2F* hBcomp = (TH2F*) hcomBcST->Clone("hBcomp");
    TH2F* hBacc = (TH2F*) haccBcST->Clone("hBacc");
    TH2F* hBcacc = (TH2F*) hcaccBcST->Clone("hBcacc");

    //hBcoin->Add(hcomBcST,-1);
    //hBcoin->Add(haccBcST,-1);
    //hBcoin->Add(hcaccBcST,1);


    hBcoin->Add(hBcSB);
    //hBcoin->Add(hcomBcSB,-1);
    //hBcoin->Add(haccBcSB,-1);
    //hBcoin->Add(hcaccBcSB,1);
    hBcomp->Add(hcomBcSB);
    hBacc->Add(haccBcSB);
    hBcacc->Add(hcaccBcSB);

    hBcoin->Add(hBcM);
    //hBcoin->Add(hcomBcM,-1);
    //hBcoin->Add(haccBcM,-1);
    //hBcoin->Add(hcaccBcM,1);
    hBcomp->Add(hcomBcM);
    hBacc->Add(haccBcM);
    hBcacc->Add(hcaccBcM);

    hBcoin->Add(hBcLF);
    //hBcoin->Add(hcomBcLF,-1);
    //hBcoin->Add(haccBcLF,-1);
    //hBcoin->Add(hcaccBcLF,1);
    hBcomp->Add(hcomBcLF);
    hBacc->Add(haccBcLF);
    hBcacc->Add(hcaccBcLF);

    hBcoin->Add(hBcLB);
    //hBcoin->Add(hcomBcLB,-1);
    //hBcoin->Add(haccBcLB,-1);
    //hBcoin->Add(hcaccBcLB,1);
    hBcomp->Add(hcomBcLB);
    hBacc->Add(haccBcLB);
    hBcacc->Add(hcaccBcLF);
}

    //=================
    //Display
    //=================

    if(plotA){
      hAcoin->SetTitle("AT A");
      hAcoin->Draw("colz");
    }
    if(plotB){
      hBcoin->SetTitle("AT B");
      if(plotA) TCanvas* c2 = new TCanvas();
      hBcoin->Draw("colz");
    }

}
